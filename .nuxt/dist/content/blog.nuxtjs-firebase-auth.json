{
  "title": "Using Firebase Auth With Nuxt.js",
  "subtitle": "Part 1",
  "tags": [
    "vue",
    "nuxt",
    "firebase"
  ],
  "meta": {
    "index": 15,
    "fileName": "2017-10-11-Nuxtjs-Firebase-Auth.md",
    "section": "/blog",
    "dirName": "/"
  },
  "date": "2017-10-11",
  "path": "/blog/blog/nuxtjs-firebase-auth",
  "permalink": "/blog/nuxtjs-firebase-auth",
  "anchors": [
    [
      "#firebase-app-setup",
      "Firebase App Setup"
    ],
    [
      "#handling-user-authentication-state",
      "Handling User Authentication State"
    ],
    [
      "#protecting-authenticated-routes",
      "Protecting Authenticated Routes"
    ]
  ],
  "body": "<p>This article is an overview of using Nuxt.js with Firebase Authentication. In Part 2, I will provide a more detail explanation of the concepts used in this example.</p>\n<div class=\"flexContainer\"><a target=\"/\\_blank\" rel=\"noopener\" href=\"https://nuxt-firebase-auth.firebaseapp.com/\">Live Demo</a>\n<a target=\"/\\_blank\" rel=\"noopener\" href=\"https://github.com/davidroyer/nuxt-firebase-auth\">Github Repo</a></div>\n<p><strong><em>Notes:</em></strong></p>\n<ul>\n<li>\n<p>I am using SPA mode with Nuxt.js which is implemented by setting the option <code>mode: 'spa'</code> in <code>nuxt.config.js</code>.</p>\n</li>\n<li>\n<p>You need to enable the Sign-In Method for Google from the Authentication settings via your Firebase Console.</p>\n</li>\n<li>\n<p>I am using Firebase Hosting but it should work with any static hosting provider. However, you’ll need to authorize that domain via your Firebase Console in Authentication settings via your Firebase Console under the Sign-In Methods Tab.</p>\n</li>\n</ul>\n<p>I have created 3 files that handle the issues faced when attempting to use Firebase Auth with Nuxt.js.</p>\n<ul>\n<li>\n<p><code>fireinit.js</code></p>\n</li>\n<li>\n<p><code>fireauth.js</code></p>\n</li>\n<li>\n<p><code>router-auth.js</code></p>\n</li>\n</ul>\n<hr>\n<h1 id=\"firebase-app-setup\">Firebase App Setup</h1>\n<p>To setup/initialize the firebase app with credentials, I created <code>services/fireinit.js</code>. An issue commonly seen by developers is Firebase telling us an app already exist. The line below solves this issue.</p>\n<p><code>!firebase.apps.length ? firebase.initializeApp(config) : ''</code></p>\n<p>This is an <code>if/else</code> statement in shortened form. It checks if any firebase apps already exist.</p>\n<p>If one does not exist, initialize the app, otherwise do nothing because it’s already happened so we’re good to go.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// This is `services/fireinit.js`</span>\n\n  <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> firebase <span class=\"token keyword\">from</span> <span class=\"token string\">'firebase/app'</span>\n  <span class=\"token keyword\">import</span> <span class=\"token string\">'firebase/auth'</span>\n  <span class=\"token keyword\">import</span> <span class=\"token string\">'firebase/firestore'</span>\n  <span class=\"token keyword\">import</span> <span class=\"token string\">'firebase/database'</span>\n\n  <span class=\"token keyword\">var</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    apiKey<span class=\"token punctuation\">:</span> <span class=\"token string\">\"yourProjectValueHere\"</span><span class=\"token punctuation\">,</span>\n    authDomain<span class=\"token punctuation\">:</span> <span class=\"token string\">\"yourProjectValueHere\"</span><span class=\"token punctuation\">,</span>\n    databaseURL<span class=\"token punctuation\">:</span> <span class=\"token string\">\"yourProjectValueHere\"</span><span class=\"token punctuation\">,</span>\n    projectId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"yourProjectValueHere\"</span><span class=\"token punctuation\">,</span>\n    storageBucket<span class=\"token punctuation\">:</span> <span class=\"token string\">\"yourProjectValueHere\"</span><span class=\"token punctuation\">,</span>\n    messagingSenderId<span class=\"token punctuation\">:</span> <span class=\"token string\">\"yourProjectValueHere\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token operator\">!</span>firebase<span class=\"token punctuation\">.</span>apps<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> firebase<span class=\"token punctuation\">.</span><span class=\"token function\">initializeApp</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> GoogleProvider <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">firebase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>GoogleAuthProvider</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> auth <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token function\">auth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> DB <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token function\">database</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> StoreDB <span class=\"token operator\">=</span> firebase<span class=\"token punctuation\">.</span><span class=\"token function\">firestore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> firebase\n</code></pre>\n<hr>\n<h1 id=\"handling-user-authentication-state\">Handling User Authentication State</h1>\n<p>Firebase provides <code>onAuthStateChanged</code> to handle user state. I created <code>fireauth.js</code> to setup this functionality</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token comment\">// This is `@plugins/fireauth.js`</span>\n\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> auth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@/services/fireinit.js'</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>store<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      auth<span class=\"token punctuation\">.</span><span class=\"token function\">onAuthStateChanged</span><span class=\"token punctuation\">(</span>user <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>store<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'setUser'</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre>\n<hr>\n<h1 id=\"protecting-authenticated-routes\">Protecting Authenticated Routes</h1>\n<p><strong>Scenario 1:</strong> A user is already signed-in and the next route is <code>/login</code></p>\n<p><em>Redirect to <code>/admin</code></em></p>\n<br>\n<p><strong>Scenario 2:</strong> There is not a user signed-in and the next route is <code>/admin</code> or a sub-route such as, <code>/admin/settings</code></p>\n<p><em>Redirect to <code>/login</code></em></p>\n<br>\n<p>This functions checks for the 2 scenarios:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// This is `@middleware/router-auth.js`</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> store<span class=\"token punctuation\">,</span> redirect<span class=\"token punctuation\">,</span> route <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> route<span class=\"token punctuation\">.</span>name <span class=\"token operator\">==</span> <span class=\"token string\">'login'</span> <span class=\"token operator\">?</span> <span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/admin'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n  store<span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>user <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">isAdminRoute</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">isAdminRoute</span><span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>route<span class=\"token punctuation\">.</span>matched<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span>record <span class=\"token operator\">=></span> record<span class=\"token punctuation\">.</span>path <span class=\"token operator\">==</span> <span class=\"token string\">'/admin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br>\n<p>We will tell Nuxt.js to use this file by declaring it in <code>nuxt.config.js</code> as follows:</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">router<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n  middleware<span class=\"token punctuation\">:</span> <span class=\"token string\">'router-auth'</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<br>\n<p>With all of this in place, we are able to use Firebase Authentication with Nuxt.js to protect the <code>/admin</code> route as well as child routes such as <code>/admin/settings</code>.</p>\n"
}